name: Build No Cache

on:
  workflow_dispatch:
  schedule:
    - cron: "30 12 * * 0"
    # Will run once a week on Sunday afternoon

jobs:
  build-no-cache:
    outputs:
      docker-image-tag: ${{ steps.build-image.outputs.tag }}
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: trn_generator
          POSTGRES_PASSWORD: trn_generator
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: Build
        run: dotnet build --configuration Release
        working-directory: TrnGeneratorApi

      - name: Tests
        uses: ./.github/workflows/actions/test
        with:
          test_project_path: TrnGeneratorApi/tests/TrnGeneratorApi.IntegrationTests
          report_name: "Test results"
          dotnet_test_args: '-e ConnectionStrings__DefaultConnection="Host=localhost;Username=postgres;Password=trn_generator;Database=trn_generator" -e ApiKeys__0="12345"'

      - name: Publish
        run: dotnet publish --configuration Release --no-build src/TrnGeneratorApi/TrnGeneratorApi.csproj
        working-directory: TrnGeneratorApi

      - name: Docker image tag
        id: image
        run: |
          echo "tag=$CONTAINER_REGISTRY/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]'):$GITHUB_SHA"  >> $GITHUB_OUTPUT

      - name: Build and push docker image
        id: build-image
        uses: DFE-Digital/github-actions/build-docker-image@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          context: TrnGeneratorApi/src/TrnGeneratorApi
          dockerfile-path: TrnGeneratorApi/src/TrnGeneratorApi/Dockerfile
          max-cache: false
          reuse-cache: false
          snyk-token: ${{ secrets.SNYK_TOKEN }}

      - name: Notify slack on failure
        uses: rtCamp/action-slack-notify@master
        if: ${{ failure() }}
        env:
          SLACK_USERNAME: CI Deployment
          SLACK_COLOR: failure
          SLACK_ICON_EMOJI: ":github-logo:"
          SLACK_TITLE: "Build failure"
          SLACK_MESSAGE: ":alert: Rebuild docker cache failure :sadparrot:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
